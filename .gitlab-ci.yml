# docker-build:
#   stage: build
#   image: docker:19.03-dind

#   # This will run a Docker daemon in a container (Docker-In-Docker), which will
#   # be available at thedockerhost:2375. If you make e.g. port 5000 public in Docker
#   # (`docker run -p 5000:5000 yourimage`) it will be exposed at thedockerhost:5000.
#   services:
#   - name: docker:dind
#     command: ["--tls=false"]


#   variables:
#     # Tell docker CLI how to talk to Docker daemon; see
#     # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
#     DOCKER_HOST: tcp://docker:2375/
#     DOCKER_DRIVER: overlay2
#     DOCKER_TLS_CERTDIR: ""


#   script:
#     - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
#     - docker build -t ${DOCKER_USER}/${CI_PROJECT_NAME} .
#     - docker push ${DOCKER_USER}/${CI_PROJECT_NAME}

#   # Only build off of master branch:
#   only:
#     - master

image: docker

services:
  - docker:dind

before_script:
  - apk add --no-cache py-pip
  - pip install docker-compose
  - docker-compose build
  - docker-compose up -d
  # here we can install our dependencies (composer, yarnâ€¦)

tests:
  script:
    # launch our tests
    - docker-compose exec php phpspec run --format pretty
    - docker-compose exec php phpunit
    - docker-compose exec php behat