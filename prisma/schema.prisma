generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
  provider = "prisma-class-generator"
}

datasource db {
  provider = "mysql"
  url      = env("NEST_DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
}

model Department {
  id        String  @id @default(uuid())
  oldId     Int?    @unique
  fileId    String?
  title     String  @unique @db.VarChar(200)
  slug      String  @unique @db.VarChar(250)
  isDeleted Boolean @default(false)
  preview   File?   @relation(fields: [fileId], references: [id])
  entries   Entry[]

  @@index([fileId], map: "Department_fileId_fkey")
}

model Entry {
  id           String      @id @default(uuid())
  oldId        Int?        @unique
  fileId       String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  publishedAt  DateTime    @default(now())
  title        String      @db.VarChar(200)
  desc         String?     @db.LongText
  /// ckeditor
  content      String?     @db.LongText
  slug         String      @unique @db.VarChar(250)
  published    Boolean     @default(false)
  isDeleted    Boolean     @default(false)
  departmentId String
  rubricId     String?
  department   Department  @relation(fields: [departmentId], references: [id])
  preview      File?       @relation(fields: [fileId], references: [id])
  rubric       Rubric?     @relation(fields: [rubricId], references: [id])
  affiche      Affiche?
  mainSlider   MainSlider?

  @@index([departmentId], map: "Entry_departmentId_fkey")
  @@index([fileId], map: "Entry_fileId_fkey")
  @@index([rubricId], map: "Entry_rubricId_fkey")
}

model Document {
  id         String    @id @default(uuid())
  oldId      Int?      @unique
  title      String    @db.VarChar(200)
  /// ckeditor
  content    String    @db.LongText
  isDeleted  Boolean   @default(false)
  menuItemId String?   @unique
  fileId     String?
  preview    File?     @relation(fields: [fileId], references: [id])
  menuItem   MenuItem? @relation(fields: [menuItemId], references: [id])

  @@index([fileId], map: "Document_fileId_fkey")
}

model Affiche {
  id         String   @id @default(uuid())
  oldId      Int?     @unique
  eventDate  DateTime @db.Date
  eventTime  DateTime @db.Time(0)
  title      String   @db.VarChar(500)
  /// ckeditor
  desc       String   @db.LongText
  eventPlace String
  phone      String?  @db.VarChar(22)
  slug       String   @unique @db.VarChar(250)
  isDeleted  Boolean  @default(false)
  entryId    String?  @unique
  entry      Entry?   @relation(fields: [entryId], references: [id])
}

model Rubric {
  id        String  @id @default(uuid())
  oldId     Int?    @unique
  title     String  @unique @db.VarChar(500)
  slug      String  @unique @db.VarChar(250)
  isDeleted Boolean @default(false)
  entries   Entry[]
}

model Menu {
  id        String     @id @default(uuid())
  oldId     Int?       @unique
  title     String     @unique
  isDeleted Boolean    @default(false)
  menuType  MenuType?
  menuItems MenuItem[]
}

model MenuItem {
  id           String       @id @default(uuid())
  oldId        Int?         @unique
  title        String       @unique
  menuId       String
  slug         String       @unique @db.VarChar(250)
  isDeleted    Boolean      @default(false)
  menuItemType MenuItemType
  link         String?
  menu         Menu         @relation(fields: [menuId], references: [id])
  document     Document?

  @@index([menuId], map: "MenuItem_menuId_fkey")
}

model MainSlider {
  id        String   @id @default(uuid())
  oldId     Int?     @unique
  title     String
  /// ckeditor
  desc      String   @db.VarChar(200)
  createdAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  url       String?
  entryId   String?  @unique
  fileId    String?
  entry     Entry?   @relation(fields: [entryId], references: [id])
  image     File?    @relation(fields: [fileId], references: [id])

  @@index([fileId], map: "MainSlider_fileId_fkey")
}

model File {
  id           String       @id @default(uuid())
  originalName String       @db.VarChar(200)
  mimeType     String       @db.VarChar(50)
  hash         String       @unique @db.VarChar(64)
  type         FileTypes
  path         String       @db.VarChar(400)
  preview      String?      @db.VarChar(400)
  createdAt    DateTime     @default(now())
  Department   Department[]
  Document     Document[]
  Entry        Entry[]
  MainSlider   MainSlider[]
}

enum MenuType {
  COMMON
  ABOUT
  COLLEAGUES
  DOCUMENTS
}

enum MenuItemType {
  DOCUMENT
  LINK
}

enum FileTypes {
  IMAGE
  DOCUMENT
  ARCHIVE
  EXHIBITION
}
